# -*- coding: utf-8 -*-
"""
Created on Thu Jul  1 11:12:45 2021
# 两种读图方式，循环读入文件夹下的图像进行测试，验证resNet50的训练模型的准确率
@author: wzh
"""
import torch
import glob
import cv2
import torch.nn.functional as F
from torch.autograd import Variable
from torchvision import models, transforms
import numpy as np
from PIL import Image

def cvReadImg(imgdir,tfm):
    img = cv2.imread(imgdir)
    img=cv2.cvtColor(img,cv2.COLOR_BGR2RGB)
    img=Image.fromarray(img,mode="RGB")
    img=tfm(img)
    img=img.unsqueeze(0)
    return img

def torchReadImg(imgdir,tfm):
    img=Image.open(imgdir).convert('RGB')
    img=tfm(img)
    img=img.unsqueeze(0)
    return img

if __name__ =='__main__':
    # device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')
    device=torch.device('cpu')
    model = models.resnet50(pretrained=True)
    num_ftrs = model.fc.in_features
    model.fc = torch.nn.Linear(num_ftrs, 2)
    loaded_model = torch.load('modelx.pt')
    model.load_state_dict(loaded_model)
    model.eval()    #把模型转为test模式
    model.to(device)
    
    tfm =  transforms.Compose([ 
        transforms.Resize(256),
        transforms.CenterCrop(224),
        transforms.ToTensor(),
        transforms.Normalize([0.485, 0.456, 0.406], [0.229, 0.224, 0.225])        
    ])
    
    #循环读取文件夹内的jpg图片并输出结果
    for jpgfile in glob.glob(r'./data/val/single/*.jpg'):
        print(jpgfile)#打印图片名称，以与结果进行对照  
        img=cvReadImg(jpgfile,tfm)  # 读图进行测试，两种方式，opencv读入的和PIL读入的
        img = img.to(device)
        output=model(Variable(img))
        prob = F.softmax(output, dim=1)
        prob = Variable(prob)
        prob = prob.cpu().numpy()  #用GPU的数据训练的模型保存的参数都是gpu形式的，要显示则先要转回cpu，再转回numpy模式
        print(prob)  #prob是2个分类的概率
        pred = np.argmax(prob) #选出概率最大的一个
        print(pred.item())
